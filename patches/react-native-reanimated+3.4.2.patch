diff --git a/node_modules/react-native-reanimated/src/reanimated2/animation/decay.ts b/node_modules/react-native-reanimated/src/reanimated2/animation/decay.ts
index a941cc4..a766237 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/animation/decay.ts
+++ b/node_modules/react-native-reanimated/src/reanimated2/animation/decay.ts
@@ -11,6 +11,7 @@ import { isWeb } from '../PlatformChecker';
 interface DecayConfig {
   deceleration?: number;
   velocityFactor?: number;
+  rubberBandEffect?: boolean;
   clamp?: number[];
   velocity?: number;
 }
@@ -70,6 +71,7 @@ export const withDecay = function (
     }
 
     const VELOCITY_EPS = IS_WEB ? 1 / 20 : 1;
+    const DERIVATIVE_EPS = 10e-3;
     const SLOPE_FACTOR = 0.1;
 
     let decay: (animation: InnerDecayAnimation, now: number) => boolean;
@@ -90,13 +92,6 @@ export const withDecay = function (
           derivative = current - config.clamp![clampIndex];
         }
 
-        if (derivative !== 0) {
-          animation.springActive = true;
-        } else if (derivative === 0 && animation.springActive) {
-          animation.current = config.clamp![clampIndex];
-          return true;
-        }
-
         const v =
           velocity *
             Math.exp(
@@ -104,6 +99,15 @@ export const withDecay = function (
             ) -
           derivative * config.rubberBandFactor;
 
+        if (Math.abs(derivative) > DERIVATIVE_EPS) {
+          animation.springActive = true;
+        } else if (animation.springActive) {
+          animation.current = config.clamp![clampIndex];
+          return true;
+        } else if (Math.abs(v) < VELOCITY_EPS) {
+          return true;
+        }
+
         animation.current =
           current + (v * config.velocityFactor * deltaTime) / 1000;
         animation.velocity = v;
